//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "PDFHUDLayerControllerDelegate.h"

@class CALayer, CPReadingModel, NSArray, NSEvent, NSString, PDFAnnotation, PDFDocument, PDFHUDLayerController, PDFPage, PDFSelection, PDFSelectionTrackingData, PDFTileCache, PDFViewLayout;

@interface PDFLayerController : NSObject <PDFHUDLayerControllerDelegate>
{
    CALayer *_parentLayer;
    PDFTileCache *_tileCache;
    PDFDocument *_document;
    PDFViewLayout *_layout;
    PDFSelection *_currentSelection;
    PDFAnnotation *_currentAnnotation;
    PDFPage *_currentPage;
    PDFSelection *_currentSearchSelection;
    NSString *_currentSearchString;
    NSArray *_currentHighlights;
    double _scaleFactor;
    int _displayMode;
    BOOL _displaysPageBreaks;
    id <PDFLayerControllerDelegate> _delegate;
    int _mouseTrackingMode;
    BOOL _inContinuousAutoscroll;
    NSEvent *_lastAutoscrollEvent;
    struct CGPoint _lastAutoscrollPoint;
    PDFSelectionTrackingData *_selectionTrackingData;
    BOOL _shouldConstrainScrolling;
    BOOL _shouldUseBuiltInFindImplementation;
    BOOL _shouldUseBuiltInContextMenuImplementation;
    BOOL _shouldUseModalAnnotationEditing;
    BOOL _inhibitInertialScroll;
    PDFHUDLayerController *_pdfHUD;
    BOOL _pdfHUDup;
    BOOL _pdfHUDEnabled;
    NSString *_passwordInstruction;
    NSString *_passwordPrompt;
    NSArray *_searchMatches;
    CPReadingModel *_readingModel;
}

@property(retain, nonatomic) NSArray *searchMatches; // @synthesize searchMatches=_searchMatches;
@property BOOL shouldUseModalAnnotationEditing; // @synthesize shouldUseModalAnnotationEditing=_shouldUseModalAnnotationEditing;
@property BOOL shouldUseBuiltInContextMenuImplementation; // @synthesize shouldUseBuiltInContextMenuImplementation=_shouldUseBuiltInContextMenuImplementation;
@property BOOL shouldUseBuiltInFindImplementation; // @synthesize shouldUseBuiltInFindImplementation=_shouldUseBuiltInFindImplementation;
@property BOOL shouldConstrainScrolling; // @synthesize shouldConstrainScrolling=_shouldConstrainScrolling;
@property id <PDFLayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) PDFDocument *document; // @synthesize document=_document;
- (id)annotationFollowing:(id)arg1 wrapAround:(BOOL)arg2;
- (id)annotationPreceding:(id)arg1 wrapAround:(BOOL)arg2;
- (void)activateNextAnnotation:(BOOL)arg1;
- (struct CGRect)frame;
- (id)colorSpace;
- (void)attemptToUnlockWithPassword:(id)arg1;
- (id)passwordPrompt;
- (id)passwordInstruction;
- (BOOL)documentIsLocked;
- (void)openWithPreview;
- (void)saveToPDF;
- (BOOL)hudEnabled;
- (void)setHUDEnabled:(BOOL)arg1;
- (void)setHUDNeedsDisplay;
- (void)drawHUDInContext:(struct CGContext *)arg1;
- (void)_setAutoSize:(id)arg1;
- (void)_setActualSize:(id)arg1;
- (void)_setDoublePageScrolling:(id)arg1;
- (void)_setDoublePage:(id)arg1;
- (void)_setSinglePageScrolling:(id)arg1;
- (void)_setSinglePage:(id)arg1;
- (void)searchInDictionaryWithSelection:(id)arg1;
- (void)_searchInDictionary:(id)arg1;
- (void)_searchInSpotlight:(id)arg1;
- (void)_performWebSearch:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)setCurrentPage:(id)arg1;
- (id)currentPage;
- (id)determineCurrentPage;
- (void)inhibitInertialScrollTimerFired:(id)arg1;
- (void)inhibitInertialScrollTimer;
- (void)selectAll;
- (void)copy:(id)arg1;
- (void)copySelection;
- (void)finishAutoscroll:(id)arg1;
- (void)continueAutoscroll:(id)arg1;
- (void)autoscrollTimerFired:(id)arg1;
- (void)beginAutoscroll:(id)arg1;
- (id)findBox:(id)arg1;
- (void)gotoDestinationNoPush:(id)arg1;
- (void)gotoDestination:(id)arg1;
- (void)gotoRect:(struct CGRect)arg1 onPage:(id)arg2;
- (void)gotoAnnotation:(id)arg1;
- (void)gotoSelection:(id)arg1;
- (void)gotoPage:(id)arg1;
- (void)forceGotoPage:(id)arg1;
- (unsigned long long)lastPageIndex;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)gotoFirstPage;
- (void)gotoLastPage;
- (void)gotoPreviousPage;
- (void)gotoNextPage;
- (void)windowUp;
- (void)windowDown;
- (void)pageUp;
- (void)pageDown;
- (id)previousPage;
- (id)nextPage;
- (unsigned long long)currentPageIndex;
- (_Bool)keyDown:(id)arg1;
- (struct CGRect)boundsForAnnotation:(id)arg1;
- (id)rectsForAnnotationInLayoutSpace:(id)arg1;
- (id)input:(id)arg1 defaultValue:(id)arg2;
- (void)formChanged:(id)arg1;
- (void)interactWithAnnotation:(id)arg1;
- (id)findString:(id)arg1 caseSensitive:(BOOL)arg2 highlightMatches:(BOOL)arg3;
- (void)setSearchSelection:(id)arg1;
- (id)searchSelection;
- (void)setHighlights:(id)arg1;
- (id)highlights;
- (id)rectsForSelectionInLayoutSpace:(id)arg1;
- (id)getSelectionForWordAtPoint:(struct CGPoint)arg1;
- (void)setCurrentSelection:(id)arg1;
- (id)currentSelection;
- (void)continueMarqueeTextSelection:(id)arg1;
- (void)beginMarqueeTextSelection:(id)arg1;
- (void)continueStandardTextSelection:(id)arg1;
- (void)beginStandardTextSelection:(id)arg1;
- (BOOL)dragSelectionWithEvent:(id)arg1;
- (BOOL)shouldBeginDrag:(id)arg1;
- (void)doButtonHit:(id)arg1;
- (void)performAction:(id)arg1;
- (int)recursivelyPerformNextActions:(id)arg1 index:(int)arg2 count:(int)arg3;
- (void)annotationHit:(id)arg1;
- (void)handleButtonHit:(id)arg1;
- (void)finishTrackingAnnotation:(id)arg1;
- (void)continueTrackingAnnotation:(id)arg1;
- (void)trackMouse:(id)arg1 forAnnotation:(id)arg2;
- (void)rightMouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setScrollPosition:(struct CGPoint)arg1;
- (struct CGPoint)scrollPosition;
- (void)scrollWithDelta:(struct CGSize)arg1;
- (void)magnifyWithMagnification:(double)arg1 atPoint:(struct CGPoint)arg2 immediately:(BOOL)arg3;
- (void)drawPreviewForPage:(unsigned int)arg1 inContext:(struct CGContext *)arg2;
- (void)snapshotInContext:(struct CGContext *)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGSize)contentSizeRespectingZoom;
- (struct CGSize)contentSize;
- (void)setDeviceScaleFactor:(double)arg1;
- (double)deviceScaleFactor;
- (void)setTileScaleFactor:(double)arg1;
- (double)tileScaleFactor;
- (void)setContentScaleFactor:(double)arg1;
- (double)contentScaleFactor;
- (id)layout;
- (struct _PDFMargins)margins;
- (BOOL)displaysPageBreaks;
- (void)setDisplaysPageBreaks:(BOOL)arg1;
- (void)setDisplayMode:(int)arg1;
- (long long)displayMode;
@property(retain) CALayer *parentLayer;
- (void)dealloc;
- (id)init;
- (void)invalidateAccessibilityTable;
- (void)invalidateTextSelection;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForLineAttributeForParameter:(id)arg1;
- (id)accessibilityLineForIndexAttributeForParameter:(id)arg1;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (id)accessibilityNumberOfCharactersAttribute;
- (id)accessibilitySelectedTextRangeAttribute;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (id)accessibilitySelectedTextAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityValueAttribute;
- (id)accessibilityRoleDescriptionAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityParameterizedAttributeNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityIsIgnored;
- (id)readingModel;

@end

