//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <WebKit/WebBaseNetscapePluginView.h>

#import "WebPluginContainerCheckController.h"
#import "WebPluginManualLoader.h"

@class NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface WebNetscapePluginDocumentView : WebBaseNetscapePluginView <WebPluginManualLoader, WebPluginContainerCheckController>
{
    struct RefPtr<WebNetscapePluginStream> _manualStream;
    struct RetainPtr<CALayer> _pluginLayer;
    unsigned int _dataLengthReceived;
    struct RetainPtr<NSError> _error;
    unsigned int argsCount;
    char **cAttributes;
    char **cValues;
    struct _NPP *plugin;
    struct _NPWindow window;
    struct _NPWindow lastSetWindow;
    union PluginPort nPort;
    union PluginPort lastSetPort;
    int drawingModel;
    int eventModel;
    struct OwnPtr<WebNetscapePluginEventHandler> _eventHandler;
    BOOL inSetWindow;
    BOOL shouldStopSoon;
    unsigned int currentTimerID;
    struct HashMap<unsigned int, PluginTimer *, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<PluginTimer *>> *timers;
    unsigned int pluginFunctionCallDepth;
    int specifiedHeight;
    int specifiedWidth;
    struct HashSet<WTF::RefPtr<WebNetscapePluginStream>, WTF::PtrHash<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>> streams;
    struct RetainPtr<NSMapTable> _pendingFrameLoads;
    BOOL _isFlash;
    BOOL _isSilverlight;
    NSMutableDictionary *_containerChecksInProgress;
    unsigned int _currentContainerCheckRequestID;
}

+ (id)currentPluginView;
+ (void)setCurrentPluginView:(id)arg1;
+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)inputContext;
- (void)pluginViewFinishedLoading:(id)arg1;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
- (void)didCallPlugInFunction;
- (void)willCallPlugInFunction;
- (BOOL)getFormValue:(id *)arg1;
- (struct NPObject *)createPluginScriptableObject;
- (void)drawRect:(struct CGRect)arg1;
- (void)finalize;
- (void)dealloc;
- (void)disconnectStream:(struct WebNetscapePluginStream *)arg1;
- (void)fini;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 pluginPackage:(id)arg2 URL:(id)arg3 baseURL:(id)arg4 MIMEType:(id)arg5 attributeKeys:(id)arg6 attributeValues:(id)arg7 loadManually:(BOOL)arg8 element:(PassRefPtr_145026a0)arg9;
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
- (void)cancelCheckIfAllowedToLoadURL:(unsigned int)arg1;
- (void)_containerCheckResult:(int)arg1 contextInfo:(id)arg2;
- (unsigned int)checkIfAllowedToLoadURL:(const char *)arg1 frame:(const char *)arg2 callbackFunc:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (void)setAttributeKeys:(id)arg1 andValues:(id)arg2;
- (struct _NPP *)plugin;
- (int)eventModel;
- (void)destroyPlugin;
- (BOOL)shouldStop;
- (void)loadStream;
- (void)setLayer:(id)arg1;
- (id)pluginLayer;
- (BOOL)createPlugin;
- (void)setWindowIfNecessary;
- (void)updateAndSetWindow;
- (void)tellQuickTimeToChill;
- (BOOL)isNewWindowEqualToOldWindow;
- (void)privateBrowsingModeDidChange;
- (void)sendModifierEventWithKeyCode:(int)arg1 character:(BOOL)arg2;
- (void)flagsChanged:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)handleMouseMoved:(id)arg1;
- (void)handleMouseExited:(id)arg1;
- (void)handleMouseEntered:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)focusChanged;
- (void)startTimers;
- (void)stopTimers;
- (void)sendDrawRectEvent:(struct CGRect)arg1;
- (void)windowFocusChanged:(BOOL)arg1;
- (BOOL)sendEvent:(void *)arg1 isDrawRect:(BOOL)arg2;
- (void)restorePortState:(struct OpaquePortState *)arg1;
- (struct OpaquePortState *)saveAndSetNewPortState;
- (struct OpaquePortState *)saveAndSetNewPortStateForUpdate:(BOOL)arg1;
- (void)fixWindowPort;
- (char *)resolveURL:(const char *)arg1 forTarget:(const char *)arg2;
- (short)getAuthenticationInfoWithProtocol:(const char *)arg1 host:(const char *)arg2 port:(int)arg3 scheme:(const char *)arg4 realm:(const char *)arg5 username:(char **)arg6 usernameLength:(unsigned int *)arg7 password:(char **)arg8 passwordLength:(unsigned int *)arg9;
- (short)setVariable:(int)arg1 forURL:(const char *)arg2 value:(const char *)arg3 length:(unsigned int)arg4;
- (short)getVariable:(int)arg1 forURL:(const char *)arg2 value:(char **)arg3 length:(unsigned int *)arg4;
- (short)popUpContextMenu:(struct _NPNSMenu *)arg1;
- (void)unscheduleTimer:(unsigned int)arg1;
- (unsigned int)scheduleTimerWithInterval:(unsigned int)arg1 repeat:(unsigned char)arg2 timerFunc:(CDUnknownFunctionPointerType)arg3;
- (short)setVariable:(int)arg1 value:(void *)arg2;
- (short)getVariable:(int)arg1 value:(void *)arg2;
- (void)forceRedraw;
- (void)invalidateRegion:(void *)arg1;
- (void)invalidateRect:(struct _NPRect *)arg1;
- (void)status:(const char *)arg1;
- (const char *)userAgent;
- (short)destroyStream:(struct _NPStream *)arg1 reason:(short)arg2;
- (short)write:(struct _NPStream *)arg1 len:(int)arg2 buffer:(void *)arg3;
- (short)newStream:(char *)arg1 target:(const char *)arg2 stream:(struct _NPStream **)arg3;
- (short)postURL:(const char *)arg1 target:(const char *)arg2 len:(unsigned int)arg3 buf:(const char *)arg4 file:(unsigned char)arg5;
- (short)postURLNotify:(const char *)arg1 target:(const char *)arg2 len:(unsigned int)arg3 buf:(const char *)arg4 file:(unsigned char)arg5 notifyData:(void *)arg6;
- (short)_postURL:(const char *)arg1 target:(const char *)arg2 len:(unsigned int)arg3 buf:(const char *)arg4 file:(unsigned char)arg5 notifyData:(void *)arg6 sendNotification:(BOOL)arg7 allowHeaders:(BOOL)arg8;
- (short)getURL:(const char *)arg1 target:(const char *)arg2;
- (short)getURLNotify:(const char *)arg1 target:(const char *)arg2 notifyData:(void *)arg3;
- (short)loadRequest:(id)arg1 inTarget:(const char *)arg2 withNotifyData:(void *)arg3 sendNotification:(BOOL)arg4;
- (void)loadPluginRequest:(id)arg1;
- (void)webFrame:(id)arg1 didFinishLoadWithError:(id)arg2;
- (void)webFrame:(id)arg1 didFinishLoadWithReason:(short)arg2;
- (void)evaluateJavaScriptPluginRequest:(id)arg1;
- (void)_redeliverStream;
- (id)_printedPluginBitmap;
- (void)_destroyPlugin;
- (short)_createPlugin;
- (void)_workaroundSilverlightFullscreenBug:(BOOL)arg1;
- (BOOL)_shouldCancelSrcStream;

@end

